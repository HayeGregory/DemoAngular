requirements :
- installer nodeJS (version LTS) : npm -v, node -v pour check les versions
- installer Angular : npm i -g @angular/cli , ng version pour check la version
- installer VS code (extension : Angular schematics, Angular Snippets, Angular Language Service)
    (extensions en plus : bracket pair colorizer, Material icon theme, prettier coe formatter)

Creation du projet :
- ng new [nomProjet] --skip-tests --routing
(le mode strict sera a true : a changer dans le fichier tsconfig.json si necessaire)
- repondre y pour Angular routing
- choisir scss pour le template css
- verifier que l'app tourne : ng serve --o [--port=42xx] 
- navigateur  : localhost

Commande ng : 
creer un module (ajouter --routing pour inclure nom-routing.module.ts): 
    ng g m [nomModule]
creer un composant : 
    ng g c [nomComposant]
creer un composant a inclure dans un module existant : 
    ng g c [nomComposant] -m [nomModuleExistant]

========================================================================
composant home et about + navigation de base 
- creer les composant dans un dossier components
- app-routing.module.ts : ajouter le path vers home et about
- app.component.html : liens href / routerLink + router-outlet

possibilite architecture liens/sousliens (/home/about par ex)
- modifier le path dans app-routing.module.ts en specifiant about children de home

========================================================================
navigation inter-module :
cas : 
liens principaux au niveau du module parent:  app-routing.module.ts
liens secondaires au niveau du module enfant: demo-routing.module.ts
- preparer un composant nav : html avec les routerlink, css
- rajouter la structure html (header/nav/content) dans app.component.html
- creer un module demo avec --routing
- creer un composant à inclure dans le module demo
- creer un composant demo01 dans demo
- rajouter le router-outlet dans demo.components.html
- definir les path dans le demo-routing.module.ts (avec un children)
- dans app.module.ts definir l’import : demoRoutingModule
- Definir les routes dans app-routing.module.ts avec un loadchildren import(chemin du module ).then m.Demomodule

========================================================================
Binding one way , two way
- pour l'utilisation des formulaire : FormsModule à importer dans le module concerné

========================================================================
Binding event
- lier un event JS à une methode dans ts : (click)="maMethode()" 

========================================================================
Attribute Binding
- desactiver un bouton via une condition & une methode changeant une valeur
- entourer un attribut html par exemple de [] afin de l'associer a une condition(html) (boolean dans ts)
========================================================================
Pipe et custom pipes
- creer un dossier pipes
- creer un custom pipe : ng generate pipe [nom du pipe]
    - premier param : sur quel propriete on va travailler (le type doit correspondre)
    - dans args: unknown[] les params eventuels
    - specifier le type de retour
- creer un module shared : ng g m shared
    - specifier la declaration et l'export du pipe 
    - dans le module importer  le sharedModule
    - attention si il peut detecter plusieurs modules et faire des imports auto sur app module alors qu'on veut l'utiliser dans demomodule
